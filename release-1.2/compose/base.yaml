# Contains the base template for all Hyperledger Fabric services
# Never directly use services in this template, but inherent
# All services are abstract without any names, config or port mapping
# https://github.com/yeasy/docker-compose-files
#
# * ca-base: base for fabric-ca
# * orderer-base: base for fabric-orderer
# * peer-base: base for fabric-peer
# * cli-base: base for fabric peer client


version: '2' # compose v3 still doesn't support `extends`, shame!

services:
  config-base:
    environment:
      - PEER_ORGS=${PEER_ORGS}
      - ORDERER_ORG=${ORDERER_ORG}
      - REPLICAS_ORG=${REPLICAS_ORG}
      - CRYPTO_DIR=${CLIENT_CRYPTO_DIR}
      - NODE_COUNT=${NODE_COUNT}
      - ARTIFACT_DIR=${ARTIFACT_DIR}
      - GENESIS_BLOCK_FILE=${GENESIS_BLOCK_FILE}
      - CHANNEL_MSP_DIR=${CHANNEL_MSP_DIR}
      - LOCAL_MSP_DIR=${LOCAL_MSP_DIR}
    volumes:
      - ${CRYPTO_DIR}:${CLIENT_CRYPTO_DIR}
      - ${CRYPTO_DIR}/msp/channel:${CHANNEL_MSP_DIR}
      - ${CRYPTO_DIR}/msp/local:${LOCAL_MSP_DIR}
      - ../data/channel-artifacts:${ARTIFACT_DIR}
      - ../scripts:/scripts
      - ../data:/data
      - ../config:/config

  ca-base:
    image: bftsmart/bftsmart-fabric-ca
    extends:
      service: config-base
    # restart: always
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_TLS_ENABLED=true # change to false to disable TLS
      - BOOTSTRAP_USER=rca-admin
      - BOOTSTRAP_PASS=rca-adminpw
      - SERVER_TYPE=org
    volumes:
      - ../scripts:/scripts
      - ../data:/data
    command: /bin/bash -c '/scripts/start-ca.sh'

  orderer-base:
    image: bftsmart/bftsmart-orderer:1.2.0
    # restart: always
    extends:
      service: config-base
    expose:
      - "7050" 
    command: /bin/bash -c '/scripts/start-orderer.sh'

  peer-base: # abstract base for fabric-peer, will be used in peer.yaml
    image: bftsmart/bftsmart-peer:1.2.0
    # restart: always
    extends:
      service: config-base
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_bftsmart
    expose:
      - "7051"  # Grpc
      - "7052"  # Peer CLI
      - "7053"  # Peer Event
    volumes: # docker.sock is mapped as the default CORE_VM_ENDPOINT
      - ../scripts:/scripts
      - ../config:/config
      - ../data:/data
      - ../data/channel-artifacts:/etc/hyperledger/channel-artifacts
      - /var/run/:/host/var/run/
    command: /bin/bash -c '/scripts/start-peer.sh'

  bft-node-base:
    image: bftsmart/bftsmart-orderingnode:1.2.0
    extends:
      service: config-base
    container_name: bft.node
    environment:
      - GOPATH=/opt/gopath
    command: bash -c '/scripts/start-replica.sh'

  cli-base:
    image: bftsmart/bftsmart-fabric-tools
    # restart: always
    extends:
      service: config-base
    tty: true

